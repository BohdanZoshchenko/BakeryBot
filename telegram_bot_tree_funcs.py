# this module is NOT UNIVERSAL for different bots
from modules import *
from settings import *

async def select_date(chat_id):
    text = "–í–∫–∞–∂—ñ—Ç—å –¥–∞—Ç—É –π —á–∞—Å, –∫–æ–ª–∏ —Ö–æ—á–µ—Ç–µ –æ—Ç—Ä–∏–º–∞—Ç–∏ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è.\n–ú—ñ–Ω—ñ–º–∞–ª—å–Ω–∏–π —Ç–µ—Ä–º—ñ–Ω –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è:\n–¢–æ—Ä—Ç/—á–∏–∑–∫–µ–π–∫ - 6-7 –¥–Ω—ñ–≤\n–ö–∞–ø–∫–µ–π–∫–∏ - 4-5 –¥–Ω—ñ–≤"
    await bot.send_message(chat_id, text)          

async def finish_order(chat_id):
    text = "–ó–∞–º–æ–≤–ª–µ–Ω–Ω—è –ø—Ä–∏–π–Ω—è—Ç–æ! –ó –≤–∞–º–∏ —Å–∫–æ—Ä–æ –∑–≤'—è–∂–µ—Ç—å—Å—è –∫–æ–Ω–¥–∏—Ç–µ—Ä, —â–æ–± –≤—Å–µ –¥–µ—Ç–∞–ª—å–Ω–æ –æ–±–≥–æ–≤–æ—Ä–∏—Ç–∏" 
    await bot.send_message(chat_id, text)
    text = ""
    await bot.send_message(chat_id, text)

async def show_items(chat_id, sql_result):
    print("items")
    items = sql_result
    markup = types.InlineKeyboardMarkup()
    for item in items:
        button = types.InlineKeyboardButton(
            'üç∞ '+ item[0]+' '+str(item[1]) + ' –ì–†–ù/–ö–ì', callback_data='show_item%' + item[0])
        markup.add(button)
    await bot.send_message(chat_id, "–û–±–∏—Ä–∞–π—Ç–µ üßê", reply_markup=markup)


async def show_single_item(chat_id, param, sql_result):
    item = sql_result[0]
    text = '*'+param[0]+'*\n'
    text += str(item[1])+"\n" #description
    text += str("–¶—ñ–Ω–∞: " + str(item[3]) + " –ì–†–ù/–ö–ì + –∑–∞ –¥–µ–∫–æ—Ä –æ–∫—Ä–µ–º–æ") + "\n"#price
    text += "–£–Ω—ñ–∫–∞–ª—å–Ω–∏–π –¥–µ–∫–æ—Ä –∑–∞ –≤–∞—à–∏–º–∏ –ø–æ–±–∞–∂–∞–Ω–Ω—è–º–∏" + "\n"
    text += "–ú—ñ–Ω—ñ–º–∞–ª—å–Ω–∞ –≤–∞–≥–∞ –¥–æ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è 2 –∫–≥"
    markup = types.InlineKeyboardMarkup()
    order_button = types.InlineKeyboardButton(
            '–ó–∞–º–æ–≤–∏—Ç–∏', callback_data='order_item%' + param[0])
    markup.add(order_button)
    info_button = types.InlineKeyboardButton(
            '–Ü–Ω—Ñ–æ', callback_data='info_in_telegram')
    back_button = types.InlineKeyboardButton(
            '–ù–∞–∑–∞–¥', callback_data='new_greeting')
    markup.row(info_button, back_button)
    await bot.send_photo(chat_id, item[2], caption=text, parse_mode="Markdown", reply_markup=markup)

async def order_item_start(chat_id, state):
    level = state[0]
    funnel = state[1]
    params = state[2]
    name = params[0]
    text ="*"+name+"*\n–Ø–∫—É –≤–∞–≥—É –±–∞–∂–∞—î—Ç–µ (–≤—ñ–¥ 2 –¥–æ 102 –∫—ñ–ª–æ–≥—Ä–∞–º—ñ–≤ üòä)? –ù–∞–ø—Ä–∏–∫–ª–∞–¥, 3.25"
    await bot.send_message(chat_id, text, parse_mode="Markdown")

async def order_item_mass(chat_id, state, sql, param):
    level = state[0]
    funnel = state[1]
    params = state[2]
    name = params[0]
    mass = param

    price = db_helper.do_sql(sql, [name])[0][0]
    sum = float(price)*float(mass)
    sum = price_format(sum)

    text = "*"+ name+"\n"
    text+= str(mass) + " –∫–≥ x " + str(price) + " = "
    text+= str(sum) + " –ì–†–ù + –∑–∞ –¥–µ–∫–æ—Ä –æ–∫—Ä–µ–º–æ*"
    text+="\n–ß—É–¥–æ–≤–æ! –í–∏ –∑–∞–º–æ–≤–∏—Ç–µ —â–µ —â–æ—Å—å —á–∏ –æ—Ñ–æ—Ä–º–∏—Ç–µ —Ç–µ, —â–æ —î?"

    inline_kb = types.InlineKeyboardMarkup(row_width=1)
    inline_kb.add(types.InlineKeyboardButton('–ó–∞–º–æ–≤–∏—Ç–∏ —â–µ', callback_data='order'))
    inline_kb.add(types.InlineKeyboardButton('–û—Ñ–æ—Ä–º–∏—Ç–∏', callback_data='order_info'))

    await bot.send_message(chat_id, text, parse_mode="Markdown", reply_markup=inline_kb)

async def handle_order():
    pass

def price_format(price):
    price = float(price)
    price = round(price, 2)
    if not "." in str(price):
        return price
    price = str(price).split('.')
    while len(price[1]) < 2:
        price[1] += "0"
    price = price[0] + "." + price[1]
    return price